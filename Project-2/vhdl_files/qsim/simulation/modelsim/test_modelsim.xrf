vendor_name = ModelSim
source_file = 1, /home/imkhilji/Desktop/Microprocessor-EE337/Project-2/VHDL Files/components.vhd
source_file = 1, /home/imkhilji/Desktop/Microprocessor-EE337/Project-2/VHDL Files/LM_SM_Block.vhd
source_file = 1, /home/imkhilji/Desktop/Microprocessor-EE337/Project-2/VHDL Files/LM_SM_logic.vhd
source_file = 1, /home/imkhilji/intelFPGA_lite/16.1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, /home/imkhilji/intelFPGA_lite/16.1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, /home/imkhilji/intelFPGA_lite/16.1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, /home/imkhilji/intelFPGA_lite/16.1/quartus/libraries/vhdl/ieee/timing_p.vhd
source_file = 1, /home/imkhilji/Desktop/Microprocessor-EE337/Project-2/VHDL Files/qsim/db/test.cbx.xml
design_name = LM_SM_Block
instance = comp, \LM_address[0]~output , LM_address[0]~output, LM_SM_Block, 1
instance = comp, \LM_address[1]~output , LM_address[1]~output, LM_SM_Block, 1
instance = comp, \LM_address[2]~output , LM_address[2]~output, LM_SM_Block, 1
instance = comp, \SM_address[0]~output , SM_address[0]~output, LM_SM_Block, 1
instance = comp, \SM_address[1]~output , SM_address[1]~output, LM_SM_Block, 1
instance = comp, \SM_address[2]~output , SM_address[2]~output, LM_SM_Block, 1
instance = comp, \op2[0]~output , op2[0]~output, LM_SM_Block, 1
instance = comp, \op2[1]~output , op2[1]~output, LM_SM_Block, 1
instance = comp, \op2[2]~output , op2[2]~output, LM_SM_Block, 1
instance = comp, \op2[3]~output , op2[3]~output, LM_SM_Block, 1
instance = comp, \op2[4]~output , op2[4]~output, LM_SM_Block, 1
instance = comp, \op2[5]~output , op2[5]~output, LM_SM_Block, 1
instance = comp, \op2[6]~output , op2[6]~output, LM_SM_Block, 1
instance = comp, \op2[7]~output , op2[7]~output, LM_SM_Block, 1
instance = comp, \op2[8]~output , op2[8]~output, LM_SM_Block, 1
instance = comp, \op2[9]~output , op2[9]~output, LM_SM_Block, 1
instance = comp, \op2[10]~output , op2[10]~output, LM_SM_Block, 1
instance = comp, \op2[11]~output , op2[11]~output, LM_SM_Block, 1
instance = comp, \op2[12]~output , op2[12]~output, LM_SM_Block, 1
instance = comp, \op2[13]~output , op2[13]~output, LM_SM_Block, 1
instance = comp, \op2[14]~output , op2[14]~output, LM_SM_Block, 1
instance = comp, \op2[15]~output , op2[15]~output, LM_SM_Block, 1
instance = comp, \en_IFID~output , en_IFID~output, LM_SM_Block, 1
instance = comp, \en_PC~output , en_PC~output, LM_SM_Block, 1
instance = comp, \clk~input , clk~input, LM_SM_Block, 1
instance = comp, \clk~inputclkctrl , clk~inputclkctrl, LM_SM_Block, 1
instance = comp, \imm_ir_8[6]~input , imm_ir_8[6]~input, LM_SM_Block, 1
instance = comp, \imm_ir_8[0]~input , imm_ir_8[0]~input, LM_SM_Block, 1
instance = comp, \mux1|output[0]~3 , mux1|output[0]~3, LM_SM_Block, 1
instance = comp, \reset~input , reset~input, LM_SM_Block, 1
instance = comp, \reset~inputclkctrl , reset~inputclkctrl, LM_SM_Block, 1
instance = comp, \ir8_reg|dout[0] , ir8_reg|dout[0], LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in~4 , lsm_block|ir8_in~4, LM_SM_Block, 1
instance = comp, \op_code[0]~input , op_code[0]~input, LM_SM_Block, 1
instance = comp, \op_code[1]~input , op_code[1]~input, LM_SM_Block, 1
instance = comp, \op_code[2]~input , op_code[2]~input, LM_SM_Block, 1
instance = comp, \op_code[3]~input , op_code[3]~input, LM_SM_Block, 1
instance = comp, \lsm_block|process_0~0 , lsm_block|process_0~0, LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in~18 , lsm_block|ir8_in~18, LM_SM_Block, 1
instance = comp, \lsm_block|process_0~2 , lsm_block|process_0~2, LM_SM_Block, 1
instance = comp, \lsm_block|Add0~0 , lsm_block|Add0~0, LM_SM_Block, 1
instance = comp, \lsm_block|Add0~2 , lsm_block|Add0~2, LM_SM_Block, 1
instance = comp, \lsm_block|counter[0]~8 , lsm_block|counter[0]~8, LM_SM_Block, 1
instance = comp, \lsm_block|counter[1]~10 , lsm_block|counter[1]~10, LM_SM_Block, 1
instance = comp, \lsm_block|counter[1] , lsm_block|counter[1], LM_SM_Block, 1
instance = comp, \lsm_block|counter~6 , lsm_block|counter~6, LM_SM_Block, 1
instance = comp, \lsm_block|Add0~4 , lsm_block|Add0~4, LM_SM_Block, 1
instance = comp, \lsm_block|counter[2]~12 , lsm_block|counter[2]~12, LM_SM_Block, 1
instance = comp, \lsm_block|counter[2] , lsm_block|counter[2], LM_SM_Block, 1
instance = comp, \lsm_block|counter~7 , lsm_block|counter~7, LM_SM_Block, 1
instance = comp, \lsm_block|Decoder0~4 , lsm_block|Decoder0~4, LM_SM_Block, 1
instance = comp, \lsm_block|Decoder1~4 , lsm_block|Decoder1~4, LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in~19 , lsm_block|ir8_in~19, LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in[5]~reg0 , lsm_block|ir8_in[5]~reg0, LM_SM_Block, 1
instance = comp, \imm_ir_8[5]~input , imm_ir_8[5]~input, LM_SM_Block, 1
instance = comp, \mux1|output[5]~6 , mux1|output[5]~6, LM_SM_Block, 1
instance = comp, \ir8_reg|dout[5] , ir8_reg|dout[5], LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in~16 , lsm_block|ir8_in~16, LM_SM_Block, 1
instance = comp, \lsm_block|Decoder0~3 , lsm_block|Decoder0~3, LM_SM_Block, 1
instance = comp, \lsm_block|Decoder1~3 , lsm_block|Decoder1~3, LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in~17 , lsm_block|ir8_in~17, LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in[4]~reg0 , lsm_block|ir8_in[4]~reg0, LM_SM_Block, 1
instance = comp, \imm_ir_8[4]~input , imm_ir_8[4]~input, LM_SM_Block, 1
instance = comp, \mux1|output[4]~1 , mux1|output[4]~1, LM_SM_Block, 1
instance = comp, \ir8_reg|dout[4] , ir8_reg|dout[4], LM_SM_Block, 1
instance = comp, \lsm_block|pe|y[2]~3 , lsm_block|pe|y[2]~3, LM_SM_Block, 1
instance = comp, \lsm_block|Decoder0~0 , lsm_block|Decoder0~0, LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in~7 , lsm_block|ir8_in~7, LM_SM_Block, 1
instance = comp, \lsm_block|Decoder1~0 , lsm_block|Decoder1~0, LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in~8 , lsm_block|ir8_in~8, LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in[1]~reg0 , lsm_block|ir8_in[1]~reg0, LM_SM_Block, 1
instance = comp, \imm_ir_8[1]~input , imm_ir_8[1]~input, LM_SM_Block, 1
instance = comp, \mux1|output[1]~4 , mux1|output[1]~4, LM_SM_Block, 1
instance = comp, \ir8_reg|dout[1] , ir8_reg|dout[1], LM_SM_Block, 1
instance = comp, \imm_ir_8[2]~input , imm_ir_8[2]~input, LM_SM_Block, 1
instance = comp, \lsm_block|Decoder0~1 , lsm_block|Decoder0~1, LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in~9 , lsm_block|ir8_in~9, LM_SM_Block, 1
instance = comp, \lsm_block|Decoder1~1 , lsm_block|Decoder1~1, LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in~10 , lsm_block|ir8_in~10, LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in[2]~reg0 , lsm_block|ir8_in[2]~reg0, LM_SM_Block, 1
instance = comp, \mux1|output[2]~2 , mux1|output[2]~2, LM_SM_Block, 1
instance = comp, \ir8_reg|dout[2] , ir8_reg|dout[2], LM_SM_Block, 1
instance = comp, \imm_ir_8[3]~input , imm_ir_8[3]~input, LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in~14 , lsm_block|ir8_in~14, LM_SM_Block, 1
instance = comp, \lsm_block|Decoder0~2 , lsm_block|Decoder0~2, LM_SM_Block, 1
instance = comp, \lsm_block|Decoder1~2 , lsm_block|Decoder1~2, LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in~15 , lsm_block|ir8_in~15, LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in[3]~reg0 , lsm_block|ir8_in[3]~reg0, LM_SM_Block, 1
instance = comp, \mux1|output[3]~5 , mux1|output[3]~5, LM_SM_Block, 1
instance = comp, \ir8_reg|dout[3] , ir8_reg|dout[3], LM_SM_Block, 1
instance = comp, \lsm_block|pe|invalid~0 , lsm_block|pe|invalid~0, LM_SM_Block, 1
instance = comp, \lsm_block|process_0~1 , lsm_block|process_0~1, LM_SM_Block, 1
instance = comp, \lsm_block|process_0~3 , lsm_block|process_0~3, LM_SM_Block, 1
instance = comp, \lsm_block|counter[0] , lsm_block|counter[0], LM_SM_Block, 1
instance = comp, \lsm_block|counter~14 , lsm_block|counter~14, LM_SM_Block, 1
instance = comp, \lsm_block|counter~5 , lsm_block|counter~5, LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in~5 , lsm_block|ir8_in~5, LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in~22 , lsm_block|ir8_in~22, LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in~6 , lsm_block|ir8_in~6, LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in[0]~reg0feeder , lsm_block|ir8_in[0]~reg0feeder, LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in[0]~reg0 , lsm_block|ir8_in[0]~reg0, LM_SM_Block, 1
instance = comp, \lsm_block|process_0~5 , lsm_block|process_0~5, LM_SM_Block, 1
instance = comp, \lsm_block|en_IFID~0 , lsm_block|en_IFID~0, LM_SM_Block, 1
instance = comp, \lsm_block|mux_select~0 , lsm_block|mux_select~0, LM_SM_Block, 1
instance = comp, \lsm_block|en_IFID~1 , lsm_block|en_IFID~1, LM_SM_Block, 1
instance = comp, \lsm_block|mux_select , lsm_block|mux_select, LM_SM_Block, 1
instance = comp, \mux1|output[6]~0 , mux1|output[6]~0, LM_SM_Block, 1
instance = comp, \ir8_reg|dout[6] , ir8_reg|dout[6], LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in~20 , lsm_block|ir8_in~20, LM_SM_Block, 1
instance = comp, \lsm_block|Decoder1~5 , lsm_block|Decoder1~5, LM_SM_Block, 1
instance = comp, \lsm_block|Decoder0~5 , lsm_block|Decoder0~5, LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in~21 , lsm_block|ir8_in~21, LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in[6]~reg0 , lsm_block|ir8_in[6]~reg0, LM_SM_Block, 1
instance = comp, \lsm_block|process_0~6 , lsm_block|process_0~6, LM_SM_Block, 1
instance = comp, \lsm_block|start~0 , lsm_block|start~0, LM_SM_Block, 1
instance = comp, \lsm_block|start~1 , lsm_block|start~1, LM_SM_Block, 1
instance = comp, \lsm_block|start , lsm_block|start, LM_SM_Block, 1
instance = comp, \lsm_block|process_0~4 , lsm_block|process_0~4, LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in~11 , lsm_block|ir8_in~11, LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in~12 , lsm_block|ir8_in~12, LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in~23 , lsm_block|ir8_in~23, LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in~13 , lsm_block|ir8_in~13, LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in[7]~reg0feeder , lsm_block|ir8_in[7]~reg0feeder, LM_SM_Block, 1
instance = comp, \lsm_block|ir8_in[7]~reg0 , lsm_block|ir8_in[7]~reg0, LM_SM_Block, 1
instance = comp, \imm_ir_8[7]~input , imm_ir_8[7]~input, LM_SM_Block, 1
instance = comp, \mux1|output[7]~7 , mux1|output[7]~7, LM_SM_Block, 1
instance = comp, \ir8_reg|dout[7] , ir8_reg|dout[7], LM_SM_Block, 1
instance = comp, \lsm_block|pe|y[0]~0 , lsm_block|pe|y[0]~0, LM_SM_Block, 1
instance = comp, \lsm_block|pe|y[0]~1 , lsm_block|pe|y[0]~1, LM_SM_Block, 1
instance = comp, \lsm_block|pe|y[0]~2 , lsm_block|pe|y[0]~2, LM_SM_Block, 1
instance = comp, \lsm_block|LM_address[0]~0 , lsm_block|LM_address[0]~0, LM_SM_Block, 1
instance = comp, \lsm_block|LM_address[0] , lsm_block|LM_address[0], LM_SM_Block, 1
instance = comp, \lsm_block|pe|y[1]~5 , lsm_block|pe|y[1]~5, LM_SM_Block, 1
instance = comp, \lsm_block|pe|y[1]~4 , lsm_block|pe|y[1]~4, LM_SM_Block, 1
instance = comp, \lsm_block|pe|y[1]~6 , lsm_block|pe|y[1]~6, LM_SM_Block, 1
instance = comp, \lsm_block|LM_address[1]~feeder , lsm_block|LM_address[1]~feeder, LM_SM_Block, 1
instance = comp, \lsm_block|LM_address[1] , lsm_block|LM_address[1], LM_SM_Block, 1
instance = comp, \lsm_block|pe|y[2]~7 , lsm_block|pe|y[2]~7, LM_SM_Block, 1
instance = comp, \lsm_block|LM_address[2]~feeder , lsm_block|LM_address[2]~feeder, LM_SM_Block, 1
instance = comp, \lsm_block|LM_address[2] , lsm_block|LM_address[2], LM_SM_Block, 1
instance = comp, \lsm_block|SM_address[0]~0 , lsm_block|SM_address[0]~0, LM_SM_Block, 1
instance = comp, \lsm_block|SM_address[0] , lsm_block|SM_address[0], LM_SM_Block, 1
instance = comp, \lsm_block|SM_address[1] , lsm_block|SM_address[1], LM_SM_Block, 1
instance = comp, \lsm_block|SM_address[2] , lsm_block|SM_address[2], LM_SM_Block, 1
instance = comp, \lsm_block|op2~11 , lsm_block|op2~11, LM_SM_Block, 1
instance = comp, \lsm_block|op2[0]~10 , lsm_block|op2[0]~10, LM_SM_Block, 1
instance = comp, \lsm_block|op2[0] , lsm_block|op2[0], LM_SM_Block, 1
instance = comp, \lsm_block|op2~12 , lsm_block|op2~12, LM_SM_Block, 1
instance = comp, \lsm_block|op2[1] , lsm_block|op2[1], LM_SM_Block, 1
instance = comp, \lsm_block|op2~13 , lsm_block|op2~13, LM_SM_Block, 1
instance = comp, \lsm_block|op2[2] , lsm_block|op2[2], LM_SM_Block, 1
instance = comp, \lsm_block|en_IFID , lsm_block|en_IFID, LM_SM_Block, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1

vendor_name = ModelSim
source_file = 1, C:/Github/Microprocessor-EE337/Project-2/VHDL Files/components.vhd
source_file = 1, C:/Github/Microprocessor-EE337/Project-2/VHDL Files/flag_reg.vhd
source_file = 1, c:/intelfpga_lite/16.1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, c:/intelfpga_lite/16.1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, c:/intelfpga_lite/16.1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, c:/intelfpga_lite/16.1/quartus/libraries/vhdl/ieee/timing_p.vhd
source_file = 1, C:/Github/Microprocessor-EE337/Project-2/VHDL Files/qsim/db/test.cbx.xml
design_name = flag_reg
instance = comp, \carry_flag~output , carry_flag~output, flag_reg, 1
instance = comp, \zero_flag~output , zero_flag~output, flag_reg, 1
instance = comp, \clk~input , clk~input, flag_reg, 1
instance = comp, \clk~inputclkctrl , clk~inputclkctrl, flag_reg, 1
instance = comp, \en_carry~input , en_carry~input, flag_reg, 1
instance = comp, \carry_in~input , carry_in~input, flag_reg, 1
instance = comp, \carry_reg|dout~0 , carry_reg|dout~0, flag_reg, 1
instance = comp, \reset~input , reset~input, flag_reg, 1
instance = comp, \reset~inputclkctrl , reset~inputclkctrl, flag_reg, 1
instance = comp, \carry_reg|dout , carry_reg|dout, flag_reg, 1
instance = comp, \zero_in~input , zero_in~input, flag_reg, 1
instance = comp, \op_code[2]~input , op_code[2]~input, flag_reg, 1
instance = comp, \op_code[1]~input , op_code[1]~input, flag_reg, 1
instance = comp, \op_code[3]~input , op_code[3]~input, flag_reg, 1
instance = comp, \op_code[0]~input , op_code[0]~input, flag_reg, 1
instance = comp, \Equal0~0 , Equal0~0, flag_reg, 1
instance = comp, \comp1~input , comp1~input, flag_reg, 1
instance = comp, \zero_reg|dout~0 , zero_reg|dout~0, flag_reg, 1
instance = comp, \en_zero~input , en_zero~input, flag_reg, 1
instance = comp, \zero_reg|dout~1 , zero_reg|dout~1, flag_reg, 1
instance = comp, \zero_reg|dout , zero_reg|dout, flag_reg, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
